Pelo que est√° nos logs do EasyPanel, o container est√° ainda ‚Äúcaindo‚Äù no *fallback* e tentando conectar (sem vari√°vel externa) ao banco chamado **estruturas**, que n√£o existe. Para resolver de vez:

---

## 1. Defina a vari√°vel `DATABASE_URL` no EasyPanel (n√£o confie no fallback)

1. Abra seu projeto no EasyPanel.

2. Selecione o servi√ßo da sua API (`viajey/almo` ou similar).

3. V√° em **Environment** (ou **Vari√°veis de Ambiente**).

4. Adicione **exatamente** esta chave e valor:

   ```
   DATABASE_URL=postgres://estruturas:1234@viajey_cassio:5432/almoxarifado?sslmode=disable
   ```

5. Salve e **redeploy** o servi√ßo.

> Ao fazer isso, o Docker j√° n√£o vai usar o valor padr√£o do `Dockerfile` (que aponta para ‚Äúestruturas‚Äù) e sim a URL que voc√™ acabou de injetar.

---

## 2. Remova o fallback do Dockerfile (boas pr√°ticas)

Para evitar confus√µes futuras, abra o `Dockerfile` e **delete** ou comente esta linha:

```dockerfile
ENV DATABASE_URL=${DATABASE_URL:-postgres://estruturas:1234@viajey_cassio:5432/almoxarifado?sslmode=disable}
```

Deixe apenas:

```dockerfile
# (n√£o h√° ENV DATABASE_URL aqui ‚Äî as vari√°veis vir√£o do painel)
ENV NODE_ENV=${NODE_ENV:-production}
ENV PORT=${PORT:-5013}
ENV SESSION_SECRET=${SESSION_SECRET:-almoxarifado-secret-2024}
```

Assim o servi√ßo **sempre exigir√°** que a URL seja provisionada externamente, e n√£o cair√° em um valor interno errado.

---

## 3. Validar no log

Depois do redeploy, abra os logs da aplica√ß√£o:

* Voc√™ deve ver no in√≠cio do entrypoint algo como:

  ```
  DATABASE_URL: postgres://estruturas:1234@viajey_cassio:5432/almoxarifado?sslmode=disable
  PostgreSQL est√° pronto!
  Banco de dados conectado com sucesso!
  ```

* E **n√£o** mais nenhuma linha ‚ÄúFATAL: database ‚Äòestruturas‚Äô does not exist‚Äù.

---

## 4. (Opcional) Fortale√ßa o entrypoint

No `docker-entrypoint.sh`, logo ap√≥s a valida√ß√£o de `DATABASE_URL`, voc√™ pode for√ßar uma falha caso o valor contenha ‚Äúestruturas‚Äù:

```bash
if echo "$DATABASE_URL" | grep -q "://estruturas:"; then
  echo "üö® O DATABASE_URL cont√©m o nome de banco errado (‚Äòestruturas‚Äô)."
  exit 1
fi
```

Assim, em vez de tentar a conex√£o e gerar dezenas de `FATAL` no log do Postgres, o container falha r√°pido e avisa ‚Äúnome de banco errado‚Äù.

---

Seguindo esses tr√™s passos, voc√™ garante que:

1. **A vari√°vel chega de fato** no container via EasyPanel.
2. **N√£o h√° mais fallback** que a sobrescreva.
3. **Os logs ficam limpos**, conectando somente ao banco correto `almoxarifado`.

Depois, √© s√≥ redeployar e testar novamente o fluxo de login/CRUD para confirmar que agora a API funciona sem ‚Äúdatabase does not exist‚Äù.
