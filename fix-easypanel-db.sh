#!/bin/bash
set -e

echo "üîß Script de Corre√ß√£o para EasyPanel - Banco de Dados"

# Verificar se DATABASE_URL est√° definida
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå DATABASE_URL n√£o est√° definida"
    echo "Configure no EasyPanel: postgres://estruturas:senha@postgres-service:5432/almoxarifado"
    exit 1
fi

echo "‚úÖ DATABASE_URL configurada"

# Extrair componentes da URL
DB_HOST=$(echo $DATABASE_URL | sed -E 's/^.*@([^:]+):.*/\1/')
DB_PORT=$(echo $DATABASE_URL | sed -E 's/^.*:([0-9]+).*/\1/')
DB_USER=$(echo $DATABASE_URL | sed -E 's/^.*:\/\/([^:]+):.*/\1/')
DB_PASS=$(echo $DATABASE_URL | sed -E 's/^.*:\/\/[^:]+:([^@]+)@.*/\1/')
DB_NAME=$(echo $DATABASE_URL | sed -E 's/^.*\/([^?]+).*$/\1/')

echo "üîå Conectando ao PostgreSQL:"
echo "Host: $DB_HOST"
echo "Port: $DB_PORT"  
echo "User: $DB_USER"
echo "Database: $DB_NAME"

# Configurar senha para psql
export PGPASSWORD="$DB_PASS"

# Aguardar PostgreSQL estar dispon√≠vel
echo "‚è≥ Aguardando PostgreSQL..."
until pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER"; do
    echo "PostgreSQL n√£o est√° pronto - aguardando..."
    sleep 2
done

echo "‚úÖ PostgreSQL est√° pronto!"

# Verificar se banco existe, se n√£o, criar
echo "üóÑÔ∏è Verificando banco de dados '$DB_NAME'..."
if ! psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='$DB_NAME'" | grep -q 1; then
    echo "üìù Criando banco de dados '$DB_NAME'..."
    psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d postgres -c "CREATE DATABASE \"$DB_NAME\""
    echo "‚úÖ Banco '$DB_NAME' criado com sucesso!"
else
    echo "‚úÖ Banco '$DB_NAME' j√° existe"
fi

# Testar conex√£o com o banco espec√≠fico
echo "üîç Testando conex√£o com o banco '$DB_NAME'..."
psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "SELECT current_database() as database, version();"

echo "üéØ Banco de dados configurado corretamente para EasyPanel!"